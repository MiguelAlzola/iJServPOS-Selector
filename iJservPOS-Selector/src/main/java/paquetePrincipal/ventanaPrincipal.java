/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package paquetePrincipal;

import java.awt.Desktop;
import java.io.FileNotFoundException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.IOException;
import java.util.Collections;
import java.util.Comparator;
import java.net.URI;
import java.net.URISyntaxException;


/**
 *
 * @author Miguel Alzola
 */
public class ventanaPrincipal extends javax.swing.JFrame {
public static String tipoConexion="";
public static String version="1 - 17/10/2024";
    /**
     * Creates new form ventanaPrincipal
     */
    public ventanaPrincipal() {
        

 
 
    
    String archivoDns="C:/ISAltda/iJServPOS-Selector/dns.txt";
        
    initComponents();
    
    lblVersion.setText("Version: "+version);
    interfacesRed interfaz = new interfacesRed();   
    txtIpTerminal.setText(interfaz.ipTerminal());
 
    rdEstacion.setSelected(true);
    txtIpEstacion.setEnabled(false);
    txtPuerto.setEnabled(false);

    
    //Carga los DNS en el Combo
    List<dnsEstacion> servidoresDNS = new ArrayList<dnsEstacion>();
    servidoresDNS=dnsEstacion.cargarDNS(archivoDns);
    
    Collections.sort(servidoresDNS, new Comparator<dnsEstacion>() {
    @Override
    public int compare(dnsEstacion e1, dnsEstacion e2) {
        return e1.getEstacion().compareToIgnoreCase(e2.getEstacion());
    }
});
    
    
    
    for(dnsEstacion aux : servidoresDNS){
    cmbEstacion.addItem(aux.getEstacion());
    
    
    
           rdEstacion.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                
                //Si esta activo el radioButton de DNS desactiva el campo IP y Puerto
                if (rdEstacion.isSelected()) {
                ;
                    txtIpEstacion.setEnabled(false);
                    txtPuerto.setEnabled(false);
                    cmbEstacion.setEnabled(true);
                    
                }
            }
        });
           
           rdIP.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                
                
                if (rdIP.isSelected()) {
                    txtIpEstacion.setEnabled(true);
                    txtPuerto.setEnabled(true);
                    cmbEstacion.setEnabled(false);
                    
                }
            }
        });    
           
           
           
           
           
    
    
    }

    
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox2 = new javax.swing.JComboBox<>();
        grupoRadios = new javax.swing.ButtonGroup();
        panelEstacion = new javax.swing.JPanel();
        rdEstacion = new javax.swing.JRadioButton();
        rdIP = new javax.swing.JRadioButton();
        cmbEstacion = new javax.swing.JComboBox<>();
        btnAbrirPOS = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtIpTerminal = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtIpEstacion = new javax.swing.JTextField();
        txtPuerto = new javax.swing.JTextField();
        btnWeb = new javax.swing.JButton();
        btnEfactura = new javax.swing.JButton();
        lblVersion = new javax.swing.JLabel();

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("iJServPOS-Selector");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        panelEstacion.setBorder(javax.swing.BorderFactory.createTitledBorder("Seleccionar Estación"));
        panelEstacion.setName("Selecciona Estación"); // NOI18N

        grupoRadios.add(rdEstacion);
        rdEstacion.setText("Buscar estación");
        rdEstacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdEstacionActionPerformed(evt);
            }
        });

        grupoRadios.add(rdIP);
        rdIP.setText("Por IP:");
        rdIP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdIPActionPerformed(evt);
            }
        });

        cmbEstacion.setEditable(true);
        cmbEstacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbEstacionActionPerformed(evt);
            }
        });

        btnAbrirPOS.setText("Abrir iJServ POS");
        btnAbrirPOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirPOSActionPerformed(evt);
            }
        });

        jLabel1.setText("IP de Terminal:");

        txtIpTerminal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtIpTerminalMouseClicked(evt);
            }
        });
        txtIpTerminal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIpTerminalActionPerformed(evt);
            }
        });

        jLabel2.setText("Puerto:");

        btnWeb.setText("Abrir iJServ Web");
        btnWeb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWebActionPerformed(evt);
            }
        });

        btnEfactura.setText("Abrir eFactura");
        btnEfactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEfacturaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelEstacionLayout = new javax.swing.GroupLayout(panelEstacion);
        panelEstacion.setLayout(panelEstacionLayout);
        panelEstacionLayout.setHorizontalGroup(
            panelEstacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEstacionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEstacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdIP)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdEstacion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelEstacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEstacionLayout.createSequentialGroup()
                        .addGroup(panelEstacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelEstacionLayout.createSequentialGroup()
                                .addComponent(txtIpTerminal, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 140, Short.MAX_VALUE))
                            .addGroup(panelEstacionLayout.createSequentialGroup()
                                .addComponent(cmbEstacion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(56, 56, 56)))
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPuerto, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))
                    .addGroup(panelEstacionLayout.createSequentialGroup()
                        .addComponent(txtIpEstacion, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(panelEstacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblVersion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelEstacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnEfactura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAbrirPOS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnWeb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelEstacionLayout.setVerticalGroup(
            panelEstacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEstacionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEstacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEstacionLayout.createSequentialGroup()
                        .addGroup(panelEstacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbEstacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(txtPuerto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIpEstacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelEstacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtIpTerminal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addContainerGap())
                    .addGroup(panelEstacionLayout.createSequentialGroup()
                        .addGroup(panelEstacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnAbrirPOS, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(panelEstacionLayout.createSequentialGroup()
                                .addComponent(rdEstacion)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rdIP)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnWeb, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEfactura, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelEstacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelEstacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAbrirPOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirPOSActionPerformed
        // TODO add your handling code here:
       //String tipoConexion="dns";
       String nuevaUrl="";
      
       
   
      conexion conexion = new conexion(txtIpEstacion.getText(),tipoConexion,Integer.parseInt(txtPuerto.getText()),"");
      conexion.validarConexion();
      
      if(conexion.validarConexion()==true){
      conexion.setUrlNueva(txtIpEstacion.getText()+":"+txtPuerto.getText());
      
      
           try {
               conexion.modificarServer();
           } catch (FileNotFoundException ex) {
               Logger.getLogger(ventanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
           }
      conexion.abrirPos();
      }else{
      JOptionPane.showMessageDialog(null,conexion.validarConexion(), "Error en Captación de Datos",0);   
      }
      
      
      
        
     
    }//GEN-LAST:event_btnAbrirPOSActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
 
  
        
        
        
        
        
        
    }//GEN-LAST:event_formWindowOpened

    private void rdEstacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdEstacionActionPerformed
        // TODO add your handling code here:
               
        
    }//GEN-LAST:event_rdEstacionActionPerformed

    private void cmbEstacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbEstacionActionPerformed
        // TODO add your handling code here:
        
        
    List<dnsEstacion> servidoresDNS = new ArrayList<dnsEstacion>();
    int optCombo;
    String archivoDns="C:/ISAltda/iJServPOS-Selector/dns.txt";
    servidoresDNS=dnsEstacion.cargarDNS(archivoDns);
    
        Collections.sort(servidoresDNS, new Comparator<dnsEstacion>() {
    @Override
    public int compare(dnsEstacion e1, dnsEstacion e2) {
        return e1.getEstacion().compareToIgnoreCase(e2.getEstacion());
    }
});
    
    
    optCombo=cmbEstacion.getSelectedIndex();
    dnsEstacion estacionSeleccionada=servidoresDNS.get(optCombo);
    
    
    
    
    txtIpEstacion.setText(estacionSeleccionada.getUrl());
    txtPuerto.setText(String.valueOf(estacionSeleccionada.getPuerto()));
    tipoConexion="dns";
    }//GEN-LAST:event_cmbEstacionActionPerformed

    private void rdIPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdIPActionPerformed
    tipoConexion="ip";
    txtIpEstacion.setText("");
    txtPuerto.setText(String.valueOf(8080));
    }//GEN-LAST:event_rdIPActionPerformed

    private void btnWebActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWebActionPerformed
    String urlWeb;
    urlWeb="http://"+txtIpEstacion.getText()+":"+txtPuerto.getText()+"/iJServ_Web";    
        try {
                    Desktop desktop = Desktop.getDesktop();
                    URI uri = new URI(urlWeb); // URL que deseas abrir
                    desktop.browse(uri);
                } catch (IOException | URISyntaxException ex) {
                    ex.printStackTrace();
                }
    }//GEN-LAST:event_btnWebActionPerformed

    private void btnEfacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEfacturaActionPerformed
        String urlWeb;
    urlWeb="http://"+txtIpEstacion.getText()+":"+txtPuerto.getText()+"/eFactura";    
        try {
                    Desktop desktop = Desktop.getDesktop();
                    URI uri = new URI(urlWeb); // URL que deseas abrir
                    desktop.browse(uri);
                } catch (IOException | URISyntaxException ex) {
                    ex.printStackTrace();
                }
        
    }//GEN-LAST:event_btnEfacturaActionPerformed

    private void txtIpTerminalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIpTerminalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIpTerminalActionPerformed

    private void txtIpTerminalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtIpTerminalMouseClicked



        // TODO add your handling code here:
    }//GEN-LAST:event_txtIpTerminalMouseClicked
    
         
 
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ventanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ventanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ventanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ventanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ventanaPrincipal().setVisible(true);
            }
        });
    }

    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbrirPOS;
    private javax.swing.JButton btnEfactura;
    private javax.swing.JButton btnWeb;
    private javax.swing.JComboBox<String> cmbEstacion;
    private javax.swing.ButtonGroup grupoRadios;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblVersion;
    private javax.swing.JPanel panelEstacion;
    private javax.swing.JRadioButton rdEstacion;
    private javax.swing.JRadioButton rdIP;
    private javax.swing.JTextField txtIpEstacion;
    private javax.swing.JTextField txtIpTerminal;
    private javax.swing.JTextField txtPuerto;
    // End of variables declaration//GEN-END:variables
}
